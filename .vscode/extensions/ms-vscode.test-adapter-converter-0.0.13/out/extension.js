var x=Object.create;var v=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var S=Object.getOwnPropertyNames;var R=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var m=r=>v(r,"__esModule",{value:!0});var A=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),B=(r,e)=>{m(r);for(var t in e)v(r,t,{get:e[t],enumerable:!0})},D=(r,e,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of S(e))!k.call(r,o)&&o!=="default"&&v(r,o,{get:()=>e[o],enumerable:!(t=w(e,o))||t.enumerable});return r},f=r=>D(m(v(r!=null?x(R(r)):{},"default",r&&r.__esModule&&"default"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var I=A(h=>{"use strict";Object.defineProperty(h,"__esModule",{value:!0});h.testExplorerExtensionId=void 0;h.testExplorerExtensionId="hbenl.vscode-test-explorer"});B(exports,{activate:()=>z});var u=f(require("vscode")),E=f(I());var M=f(require("vscode"));var i=f(require("vscode")),U=0,P=0,T=class{constructor(e,t){this.adapter=e;this.ctrl=t;this.itemsById=new Map;this.tasksByRunId=new Map;this.disposables=[];this.root=this.ctrl.createTestItem(`test-adapter-root-${P++}`,"Test Adapter",this.ctrl.root,void 0,{generation:0,converter:this}),this.root.debuggable=!0,this.itemsById.set(this.root.id,this.root),this.disposables.push(this.root,e.tests(o=>{switch(o.type){case"finished":this.root.busy=!1,o.suite&&(this.syncItemChildren(this.root,U++,[o.suite]),W());break;case"started":this.root.busy=!0;break}}),e.testStates(o=>{var a;let s=this.tasksByRunId.get((a=o.testRunId)!=null?a:"");if(!!s)switch(o.type){case"test":return this.onTestEvent(s,o);case"suite":return;case"finished":return s.end()}})),e.retire&&this.disposables.push(e.retire(o=>{var s,a;for(let n of(s=o.tests)!=null?s:[this.root.id])(a=this.itemsById.get(n))==null||a.invalidate()})),setTimeout(()=>this.adapter.load(),1)}async refresh(){this.root.busy=!0,await this.adapter.load(),this.root.busy=!1}dispose(){this.disposables.forEach(e=>e.dispose())}async run(e,t,o,s){var l;t.includes(this.root)&&(t=[...this.root.children.values()]);let a,n=await new Promise(p=>{a=this.adapter.testStates(c=>{c.type==="started"&&(p(c),a.dispose())}),o?this.adapter.debug?this.adapter.debug(t.map(c=>c.id)):p(void 0):this.adapter.run(t.map(c=>c.id))}).finally(()=>a.dispose());if(!n)return;let d=[t];for(;d.length;)for(let p of d.pop())e.setState(p,i.TestResultState.Queued),d.push(p.children.values());this.tasksByRunId.set((l=n.testRunId)!=null?l:"",e),s.onCancellationRequested(()=>this.adapter.cancel())}addItem(e,t,o){let s=o.children.get(e.id);return s?s.data.generation=t:(s=this.ctrl.createTestItem(e.id,e.label,o,e.file?b(e.file):o.uri,{converter:this,generation:t}),this.itemsById.set(e.id,s)),s.description=e.description,e.line!==void 0&&(s.range=new i.Range(e.line,0,e.line+1,0)),s.description=e.description,s.debuggable=!!this.adapter.debug,e.errored&&(s.error=e.message),this.syncItemChildren(s,t,"children"in e?e.children:[]),s}syncItemChildren(e,t,o){for(let s of o)this.addItem(s,t,e);for(let s of e.children.values())s.data.generation!==t&&(s.dispose(),this.itemsById.delete(s.id))}onTestEvent(e,t){var a;let o=typeof t.test=="string"?t.test:t.test.id,s=this.itemsById.get(o);if(!!s){if(t.message){let n=new i.TestMessage(t.message);n.severity=i.TestMessageSeverity.Information,e.appendMessage(s,n)}for(let n of(a=t.decorations)!=null?a:[]){let d=new i.TestMessage(n.message),l=n.file?b(n.file):s.uri;l&&(d.location=new i.Location(l,new i.Position(n.line,0))),e.appendMessage(s,d)}e.setState(s,H[t.state])}}},F=/^[a-z][a-z0-9+-.]+:/,b=r=>F.test(r)?i.Uri.parse(r):i.Uri.file(r),H={running:i.TestResultState.Running,passed:i.TestResultState.Passed,failed:i.TestResultState.Failed,skipped:i.TestResultState.Skipped,errored:i.TestResultState.Errored,completed:i.TestResultState.Unset},y=["testExplorer.gutterDecoration","testExplorer.codeLens","testExplorer.errorDecoration","testExplorer.errorDecorationHover"],C=i.workspace.getConfiguration().get(y[0])!==!1,W=async()=>{if(!C)return;C=!1;let r="Yes",e="Only in this Workspace",t="No",o=await i.window.showInformationMessage("Thanks for trying out native VS Code testing! Would you like to disable the default Test Explorer extension UI?",t,r,e);if(o===r||o===e){let s=o===r?i.ConfigurationTarget.Global:i.ConfigurationTarget.Workspace,a=i.workspace.getConfiguration();for(let n of y)a.update(n,!1,s)}};var g=class{constructor(){this.converters=new Map}registerTestAdapter(e){var t;(t=this.ctrl)!=null||(this.ctrl=this.makeTestController()),this.converters.set(e,new T(e,this.ctrl))}unregisterTestAdapter(e){var t;(t=this.converters.get(e))==null||t.dispose(),this.converters.delete(e)}dispose(){var e;(e=this.ctrl)==null||e.dispose();for(let t of this.converters.values())t.dispose()}refresh(e){for(let t of this.converters.values())(!e||t.root.id===e.id)&&t.refresh()}makeTestController(){let e=M.test.createTestController("ms-vscode.test-adapter-converter");return e.root.label="Test Adapter Converter",e.root.debuggable=!0,e.runHandler=(t,o)=>{if(t.tests.includes(e.root)){for(let a of this.converters.values())a.run(e.createTestRun(t),[a.root],t.debug,o);return}let s=new Map;for(let a of t.tests){let n=s.get(a.data.converter);n?n.push(a):s.set(a.data.converter,[a])}for(let[a,n]of s)a.run(e.createTestRun(t),n,t.debug,o)},e}};function z(r){let e;r.subscriptions.push(u.commands.registerCommand("testExplorerConverter.activate",()=>{let t=u.extensions.getExtension(E.testExplorerExtensionId);if(!t)return;let o=t.exports;e=new g,r.subscriptions.push(e),o.registerTestController(e),r.subscriptions.push({dispose(){o.unregisterTestController(e)}})}),u.commands.registerCommand("testExplorerConverter.refreshAdapter",t=>{e==null||e.refresh(t)}))}0&&(module.exports={activate});
